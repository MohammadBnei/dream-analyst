name: Build, Test and Deploy

on:
  pull_request:
  push:
    tags:
      - '*'

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/dream-analyst
  # PLATFORMS: ${{ github.event_name == 'push' && 'linux/amd64, linux/arm64' || 'linux/amd64' }}
  PLATFORMS: linux/amd64

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: package.json info
        id: info
        uses: jaywcjlove/github-action-package@v2.0.0

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name == 'push' }}
          secrets: |
            DB_PATH=${{ secrets.DB_PATH }}
            ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
            ORIGIN=${{ secrets.ORIGIN }}
          tags: ${{ env.IMAGE_NAME }}:${{ steps.info.outputs.version }}, ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:latest,mode=max

      - name: Scan Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ steps.info.outputs.version }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          vuln-type: 'os,library'
          ignore-unfixed: true
          cache-dir: ${{ github.workspace }}/.cache/trivy

  deploy:
    runs-on: ubuntu-latest
    needs: build-push
    if: github.event_name == 'push'
    defaults:
      run:
        working-directory: k8s
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: 'main'
          token: ${{ secrets.PAT }}

      - name: package.json info
        id: info
        uses: jaywcjlove/github-action-package@v2.0.0

      - uses: imranismail/setup-kustomize@v2

      - name: Update kustomize image version
        run: |
          kustomize edit set image ${{ env.IMAGE_NAME }}:${{ steps.info.outputs.version }}

      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: git push
        run: |
          git add .
          git commit -m "Chore: update kustomize image version to ${{ steps.info.outputs.version }}"
          git push
